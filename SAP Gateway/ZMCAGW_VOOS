*
* ZCL_ZMCAGW_VOOS_MPC_EXT
*

* METHOD
*  ZCL_ZMCAGW_VOOS_MPC_EXT
*    DEFINE
*
  METHOD define.

    super->define( ).

    model->get_entity_type( 'CompanhiaAereaDeep' )->bind_structure(
      iv_structure_name   = 'ZCL_ZMCAGW_VOOS_MPC_EXT=>TS_COMPANHIAHORARIODEEP'
    ).

  ENDMETHOD.

*
* ZCL_ZMCAGW_VOOS_DPC_EXT
*
class ZCL_ZMCAGW_VOOS_DPC_EXT definition
  public
  inheriting from ZCL_ZMCAGW_VOOS_DPC
  create public .

public section.

  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~EXECUTE_ACTION
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_DEEP_ENTITY
    redefinition .
	
private section.

  methods COMPANHIAHORARIO_DEEP_ENTITY
    importing
      !IO_DATA_PROVIDER type ref to /IWBEP/IF_MGW_ENTRY_PROVIDER
      !IT_KEY_TAB type /IWBEP/T_MGW_NAME_VALUE_PAIR
      !IT_NAVIGATION_PATH type /IWBEP/T_MGW_NAVIGATION_PATH
      !IO_EXPAND type ref to /IWBEP/IF_MGW_ODATA_EXPAND
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITY_C
    exporting
      !ER_DEEP_ENTITY type ZCL_ZMCAGW_VOOS_MPC_EXT=>TS_COMPANHIAHORARIODEEP .

protected section.

  methods COMPANHIAAEREASE_CREATE_ENTITY
    redefinition .
  methods COMPANHIAAEREASE_DELETE_ENTITY
    redefinition .
  methods COMPANHIAAEREASE_GET_ENTITY
    redefinition .
  methods COMPANHIAAEREASE_GET_ENTITYSET
    redefinition .
  methods COMPANHIAAEREASE_UPDATE_ENTITY
    redefinition .
  methods HORARIOVOOSET_CREATE_ENTITY
    redefinition .
  methods HORARIOVOOSET_DELETE_ENTITY
    redefinition .
  methods HORARIOVOOSET_GET_ENTITY
    redefinition .
  methods HORARIOVOOSET_GET_ENTITYSET
    redefinition .
  methods HORARIOVOOSET_UPDATE_ENTITY
    redefinition .
  methods VOOSET_CREATE_ENTITY
    redefinition .
  methods VOOSET_DELETE_ENTITY
    redefinition .
  methods VOOSET_GET_ENTITY
    redefinition .
  methods VOOSET_GET_ENTITYSET
    redefinition .
  methods VOOSET_UPDATE_ENTITY
    redefinition .



* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_DEEP_ENTITY
*
  METHOD /iwbep/if_mgw_appl_srv_runtime~create_deep_entity.

    DATA: ls_companhiahorario_deep TYPE zcl_zmcagw_voos_mpc_ext=>ts_companhiahorariodeep.

    CASE iv_entity_name.
      WHEN 'CompanhiaAereaDeep'.

        me->companhiahorario_deep_entity(
          EXPORTING
            io_data_provider        = io_data_provider
            it_key_tab              = it_key_tab
            it_navigation_path      = it_navigation_path
            io_expand               = io_expand
            io_tech_request_context = io_tech_request_context
          IMPORTING
            er_deep_entity          = ls_companhiahorario_deep
        ).

    ENDCASE.

  ENDMETHOD.


* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    /IWBEP/IF_MGW_APPL_SRV_RUNTIME~EXECUTE_ACTION
*
  METHOD /iwbep/if_mgw_appl_srv_runtime~execute_action.

    DATA: lv_printname TYPE string,
          lv_document  TYPE vbeln,
          ls_return    TYPE bapiret2.
*          lo_printer type ref to cl_printer.

    IF line_exists( it_parameter[ name = 'PrinterName' ] ).
      lv_printname = it_parameter[ name = 'PrinterName' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.
    IF line_exists( it_parameter[ name = 'Document' ] ).
      lv_document = it_parameter[ name = 'Document' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.

    CASE iv_action_name.
      WHEN 'Print'.

      WHEN 'Outros'.

      WHEN OTHERS.
        TRY.
            CALL METHOD super->/iwbep/if_mgw_appl_srv_runtime~execute_action
              EXPORTING
                iv_action_name          = iv_action_name
                it_parameter            = it_parameter
                io_tech_request_context = io_tech_request_context
              IMPORTING
                er_data                 = er_data.
          CATCH /iwbep/cx_mgw_busi_exception.
          CATCH /iwbep/cx_mgw_tech_exception.
        ENDTRY.

    ENDCASE.

    IF ls_return IS NOT INITIAL.

      me->copy_data_to_ref(
        EXPORTING
          is_data = ls_return
        CHANGING
          cr_data = er_data
      ).

    ENDIF.

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    COMPANHIAAEREASE_GET_ENTITY
*  
  METHOD companhiaaerease_get_entity.

    DATA: lv_carrid TYPE scarr-carrid.

    IF line_exists( it_key_tab[ name = 'Carrid' ] ).
      lv_carrid = it_key_tab[ name = 'Carrid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.


    SELECT SINGLE * FROM scarr
      INTO @er_entity
      WHERE carrid EQ @lv_carrid.

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    COMPANHIAAEREASE_GET_ENTITYSET
*
  METHOD companhiaaerease_get_entityset.

    DATA: lr_carrid   TYPE RANGE OF scarr-carrid,
          lr_carrname TYPE RANGE OF scarr-carrname,
          lr_currcode TYPE RANGE OF scarr-currcode.

    LOOP AT it_filter_select_options INTO DATA(ls_filters).

      CASE ls_filters-property.
        WHEN 'Carrid'.
          lr_carrid = VALUE #( FOR carrid IN ls_filters-select_options ( CORRESPONDING #( carrid ) ) ).

        WHEN 'Currname'.
          lr_carrname = VALUE #( FOR carrname IN ls_filters-select_options ( CORRESPONDING #( carrname ) ) ).

        WHEN 'Currcode'.
          lr_currcode = VALUE #( FOR currcode IN ls_filters-select_options ( CORRESPONDING #( currcode ) ) ).

        WHEN OTHERS.
      ENDCASE.

    ENDLOOP.

    SELECT * FROM scarr
      INTO TABLE @et_entityset
      WHERE carrid IN @lr_carrid
      AND currcode IN @lr_currcode.

*    /iwbep/cl_mgw_data_util=>filtering(
*      EXPORTING
*        it_select_options = it_filter_select_options
*      CHANGING
*        ct_data           = et_entityset
*    ).
    /iwbep/cl_mgw_data_util=>paging(
      EXPORTING
        is_paging = is_paging                 " paging structure
      CHANGING
        ct_data   = et_entityset
    ).
    /iwbep/cl_mgw_data_util=>orderby(
      EXPORTING
        it_order = it_order                 " the sorting order
      CHANGING
        ct_data  = et_entityset
    ).

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    COMPANHIAAEREASE_CREATE_ENTITY
*
  METHOD companhiaaerease_create_entity.

    DATA: ls_entity LIKE er_entity.

    TRY.

        io_data_provider->read_entry_data(
          IMPORTING
            es_data = ls_entity
        ).

      CATCH /iwbep/cx_mgw_tech_exception. " mgw technical exception

    ENDTRY.

    INSERT scarr FROM ls_entity.

    IF sy-subrc NE 0.

      me->mo_context->get_message_container( )->add_message(
        iv_msg_type               = 'E'                 " Message Type
        iv_msg_id                 = '1'                 " Message Class
        iv_msg_number             = '1'                 " Message Number
        iv_msg_v1                 = 'Erro ao cadastrar'                 " Message Variable
      ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          message_container = me->mo_context->get_message_container( ).

    ELSE.

      er_entity = ls_entity.

    ENDIF.

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    COMPANHIAAEREASE_UPDATE_ENTITY
*
  METHOD companhiaaerease_update_entity.

    DATA: lv_carrid TYPE scarr-carrid,
          ls_entity LIKE er_entity.

    IF line_exists( it_key_tab[ name = 'Carrid' ] ).
      lv_carrid = it_key_tab[ name = 'Carrid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.

    TRY.

        io_data_provider->read_entry_data(
          IMPORTING
            es_data = ls_entity
        ).

      CATCH /iwbep/cx_mgw_tech_exception. " mgw technical exception

    ENDTRY.

    UPDATE scarr
    SET carrname = ls_entity-carrname
        currcode = ls_entity-currcode
        url      = ls_entity-url
    WHERE carrid EQ lv_carrid.

    IF sy-subrc NE 0.

      me->mo_context->get_message_container( )->add_message(
        iv_msg_type               = 'E'                 " Message Type
        iv_msg_id                 = '2'                 " Message Class
        iv_msg_number             = '2'                 " Message Number
        iv_msg_v1                 = 'Erro ao atualizar' " Message Variable
      ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          message_container = me->mo_context->get_message_container( ).

    ELSE.

      er_entity = ls_entity.

    ENDIF.

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    COMPANHIAAEREASE_DELETE_ENTITY
*
  METHOD companhiaaerease_delete_entity.

    DATA: lv_carrid  TYPE scarr-carrid,
          lv_sysubrc TYPE sy-subrc.


    IF line_exists( it_key_tab[ name = 'Carrid' ] ).
      lv_carrid = it_key_tab[ name = 'Carrid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.

    DELETE FROM scarr
    WHERE carrid EQ lv_carrid.
    lv_sysubrc = sy-subrc.

    IF lv_sysubrc EQ '0'.

      DELETE FROM spfli
      WHERE carrid EQ lv_carrid.
      lv_sysubrc = sy-subrc.

      IF lv_sysubrc EQ '0'.

        DELETE FROM sflight
        WHERE carrid EQ lv_carrid.
        lv_sysubrc = sy-subrc.

      ENDIF.

    ENDIF.

    IF lv_sysubrc NE 0.

      me->mo_context->get_message_container( )->add_message(
        iv_msg_type               = 'E'                 " Message Type
        iv_msg_id                 = '3'                 " Message Class
        iv_msg_number             = '3'                 " Message Number
        iv_msg_v1                 = 'Erro ao excluir SCARR' " Message Variable
      ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          message_container = me->mo_context->get_message_container( ).

    ENDIF.

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    COMPANHIAAEREASE_GET_ENTITY
*  
  METHOD horariovooset_get_entity.

    DATA: lv_carrid TYPE spfli-carrid,
          lv_connid TYPE spfli-connid,
          ls_spfli  TYPE spfli.

    IF line_exists( it_key_tab[ name = 'Carrid' ] ).
      lv_carrid = it_key_tab[ name = 'Carrid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.
    IF line_exists( it_key_tab[ name = 'Connid' ] ).
      lv_connid = it_key_tab[ name = 'Connid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.

    SELECT SINGLE * FROM spfli
      INTO @ls_spfli
      WHERE carrid EQ @lv_carrid
      AND connid EQ @lv_connid.

    MOVE-CORRESPONDING ls_spfli TO er_entity.

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    HORARIOVOOSET_GET_ENTITYSET
*
  METHOD horariovooset_get_entityset.

    DATA: lr_carrid TYPE RANGE OF spfli-carrid,
          lr_connid TYPE RANGE OF spfli-connid.

    LOOP AT it_filter_select_options ASSIGNING FIELD-SYMBOL(<fs_filter>).

      CASE <fs_filter>-property.
        WHEN 'Carrid'.
          lr_carrid = VALUE #( FOR carrid IN <fs_filter>-select_options ( CORRESPONDING #( carrid ) ) ).

        WHEN 'Connid'.
          lr_connid = VALUE #( FOR connid IN <fs_filter>-select_options ( CORRESPONDING #( connid ) ) ).

        WHEN OTHERS.
      ENDCASE.

    ENDLOOP.

    SELECT * FROM spfli
      INTO TABLE @DATA(lt_spfli)
      WHERE carrid IN @lr_carrid
        AND connid IN @lr_connid.

    MOVE-CORRESPONDING lt_spfli TO et_entityset.

    /iwbep/cl_mgw_data_util=>paging(
      EXPORTING
        is_paging = is_paging
      CHANGING
        ct_data   = et_entityset
    ).
    /iwbep/cl_mgw_data_util=>orderby(
      EXPORTING
        it_order = it_order
      CHANGING
        ct_data  = et_entityset
    ).

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    HORARIOVOOSET_CREATE_ENTITY
*
  METHOD horariovooset_create_entity.

    DATA: ls_entity LIKE er_entity,
          ls_spfli  TYPE spfli.

    TRY.

        io_data_provider->read_entry_data(
          IMPORTING
            es_data = ls_entity
        ).

      CATCH /iwbep/cx_mgw_tech_exception. " mgw technical exception

    ENDTRY.

    MOVE-CORRESPONDING ls_entity TO ls_spfli.

    INSERT spfli FROM ls_spfli.

    IF sy-subrc NE 0.

      me->mo_context->get_message_container( )->add_message(
        iv_msg_type               = 'E'                 " Message Type
        iv_msg_id                 = '1'                 " Message Class
        iv_msg_number             = '1'                 " Message Number
        iv_msg_v1                 = 'Erro ao cadastrar' " Message Variable
      ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          message_container = me->mo_context->get_message_container( ).

    ELSE.

      er_entity = ls_entity.

    ENDIF.

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    HORARIOVOOSET_UPDATE_ENTITY
*
  METHOD horariovooset_update_entity.

    DATA: lv_carrid TYPE sflight-carrid,
          lv_connid TYPE sflight-connid,
          ls_entity LIKE er_entity.

    IF line_exists( it_key_tab[ name = 'Carrid' ] ).
      lv_carrid = it_key_tab[ name = 'Carrid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.
    IF line_exists( it_key_tab[ name = 'Connid' ] ).
      lv_connid = it_key_tab[ name = 'Connid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.

    TRY.

        io_data_provider->read_entry_data(
          IMPORTING
            es_data = ls_entity
        ).
      CATCH /iwbep/cx_mgw_tech_exception. " mgw technical exception

    ENDTRY.

    UPDATE spfli
    SET countryfr = ls_entity-countryfr
        cityfrom  = ls_entity-cityfrom
        airpfrom  = ls_entity-airpfrom
        countryto = ls_entity-countryto
        cityto    = ls_entity-cityto
        airpto    = ls_entity-airpto
        fltime    = ls_entity-fltime
        deptime   = ls_entity-deptime
        arrtime   = ls_entity-arrtime
        distance  = ls_entity-distance
        distid    = ls_entity-distid
        fltype    = ls_entity-fltype
        period    = ls_entity-period
    WHERE carrid EQ lv_carrid
      AND connid EQ lv_connid.

    IF sy-subrc NE 0.

      me->mo_context->get_message_container( )->add_message(
        iv_msg_type               = 'E'                 " Message Type
        iv_msg_id                 = '2'                 " Message Class
        iv_msg_number             = '2'                 " Message Number
        iv_msg_v1                 = 'Erro ao atualizar' " Message Variable
      ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          message_container = me->mo_context->get_message_container( ).

    ELSE.

      er_entity = ls_entity.

    ENDIF.

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    HORARIOVOOSET_DELETE_ENTITY
*
  METHOD horariovooset_delete_entity.

    DATA: lv_carrid  TYPE spfli-carrid,
          lv_connid  TYPE spfli-connid,
          lv_sysubrc TYPE sy-subrc.

    IF line_exists( it_key_tab[ name = 'Carrid' ] ).
      lv_carrid = it_key_tab[ name = 'Carrid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.
    IF line_exists( it_key_tab[ name = 'Connid' ] ).
      lv_connid = it_key_tab[ name = 'Connid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.

    DELETE FROM  spfli
    WHERE carrid EQ lv_carrid
    AND connid EQ lv_connid.
    lv_sysubrc = sy-subrc.

    IF lv_sysubrc EQ 0.

      DELETE FROM sflight
      WHERE carrid EQ lv_carrid
      AND connid EQ lv_connid.
      lv_sysubrc = sy-subrc.

    ENDIF.

    IF lv_sysubrc NE 0.

      me->mo_context->get_message_container( )->add_message(
        iv_msg_type               = 'E'                 " Message Type
        iv_msg_id                 = '2'                 " Message Class
        iv_msg_number             = '2'                 " Message Number
        iv_msg_v1                 = 'Erro ao atualizar' " Message Variable
      ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          message_container = me->mo_context->get_message_container( ).

    ENDIF.

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    VOOSET_GET_ENTITY
*
  METHOD vooset_get_entity.

    DATA: lv_carrid TYPE sflight-carrid,
          lv_connid TYPE sflight-connid,
          lv_fldate TYPE sflight-fldate.

    IF line_exists( it_key_tab[ name = 'Carrid' ] ).
      lv_carrid = it_key_tab[ name = 'Carrid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.
    IF line_exists( it_key_tab[ name = 'Connid' ] ).
      lv_connid = it_key_tab[ name = 'Connid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.
    IF line_exists( it_key_tab[ name = 'Fldate' ] ).
      lv_fldate = it_key_tab[ name = 'Fldate' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.

    SELECT SINGLE * FROM sflight
      INTO @er_entity
      WHERE carrid EQ @lv_carrid
      AND connid EQ @lv_connid
      AND fldate EQ @lv_fldate.

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    VOOSET_GET_ENTITYSET
*
  METHOD vooset_get_entityset.

    DATA: lr_carrid TYPE RANGE OF sflight-carrid,
          lr_connid TYPE RANGE OF sflight-connid,
          lr_fldate TYPE RANGE OF sflight-fldate.

    LOOP AT it_filter_select_options ASSIGNING FIELD-SYMBOL(<fs_filter>).

      CASE <fs_filter>-property.
        WHEN 'Carrid'.
          lr_carrid = VALUE #( FOR carrid IN <fs_filter>-select_options ( CORRESPONDING #( carrid ) ) ).

        WHEN 'Connid'.
          lr_connid = VALUE #( FOR connid IN <fs_filter>-select_options ( CORRESPONDING #( connid ) ) ).

        WHEN 'Fldate'.
          lr_fldate = VALUE #( FOR fldate IN <fs_filter>-select_options ( CORRESPONDING #( fldate ) ) ).

        WHEN OTHERS.
      ENDCASE.

    ENDLOOP.

    SELECT * FROM sflight
      INTO TABLE @et_entityset
      WHERE carrid IN @lr_carrid
        AND connid IN @lr_connid
        AND fldate IN @lr_fldate.

    /iwbep/cl_mgw_data_util=>paging(
      EXPORTING
        is_paging = is_paging
      CHANGING
        ct_data   = et_entityset
    ).
    /iwbep/cl_mgw_data_util=>orderby(
      EXPORTING
        it_order = it_order
      CHANGING
        ct_data  = et_entityset
    ).

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    VOOSET_CREATE_ENTITY
*
  METHOD vooset_create_entity.

    DATA: ls_entity LIKE er_entity.

    TRY.

        io_data_provider->read_entry_data(
          IMPORTING
            es_data = ls_entity
        ).

      CATCH /iwbep/cx_mgw_tech_exception. " mgw technical exception

    ENDTRY.

    INSERT sflight FROM ls_entity.

    IF sy-subrc NE 0.

      me->mo_context->get_message_container( )->add_message(
        iv_msg_type               = 'E'                 " Message Type
        iv_msg_id                 = '1'                 " Message Class
        iv_msg_number             = '1'                 " Message Number
        iv_msg_v1                 = 'Erro ao cadastrar'                 " Message Variable
      ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          message_container = me->mo_context->get_message_container( ).

    ELSE.

      er_entity = ls_entity.

    ENDIF.

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    VOOSET_UPDATE_ENTITY
*
  METHOD vooset_update_entity.

    DATA: lv_carrid TYPE sflight-carrid,
          lv_connid TYPE sflight-connid,
          lv_fldate TYPE sflight-fldate,
          ls_entity LIKE er_entity.

    IF line_exists( it_key_tab[ name = 'Carrid' ] ).
      lv_carrid = it_key_tab[ name = 'Carrid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.
    IF line_exists( it_key_tab[ name = 'Connid' ] ).
      lv_connid = it_key_tab[ name = 'Connid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.
    IF line_exists( it_key_tab[ name = 'Fldate' ] ).
      lv_fldate = it_key_tab[ name = 'Fldate' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.

    TRY.

        io_data_provider->read_entry_data(
          IMPORTING
            es_data = ls_entity
        ).

      CATCH /iwbep/cx_mgw_tech_exception. " mgw technical exception

    ENDTRY.

    UPDATE sflight
    SET price      = ls_entity-price
        currency   = ls_entity-currency
        planetype  = ls_entity-planetype
        seatsmax   = ls_entity-seatsmax
        seatsocc   = ls_entity-seatsocc
        paymentsum = ls_entity-paymentsum
        seatsmax_b = ls_entity-seatsmax_b
        seatsocc_b = ls_entity-seatsocc_b
        seatsmax_f = ls_entity-seatsmax_f
        seatsocc_f = ls_entity-seatsocc_f
    WHERE carrid EQ lv_carrid
     AND connid EQ lv_connid
     AND fldate EQ lv_fldate.

    IF sy-subrc NE 0.

      me->mo_context->get_message_container( )->add_message(
        iv_msg_type               = 'E'                 " Message Type
        iv_msg_id                 = '2'                 " Message Class
        iv_msg_number             = '2'                 " Message Number
        iv_msg_v1                 = 'Erro ao atualizar' " Message Variable
      ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          message_container = me->mo_context->get_message_container( ).

    ELSE.

      er_entity = ls_entity.

    ENDIF.

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    VOOSET_DELETE_ENTITY
*
  METHOD vooset_delete_entity.

    DATA: lv_carrid TYPE sflight-carrid,
          lv_connid TYPE sflight-connid,
          lv_fldate TYPE sflight-fldate.

    IF line_exists( it_key_tab[ name = 'Carrid' ] ).
      lv_carrid = it_key_tab[ name = 'Carrid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.
    IF line_exists( it_key_tab[ name = 'Connid' ] ).
      lv_connid = it_key_tab[ name = 'Connid' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.
    IF line_exists( it_key_tab[ name = 'Fldate' ] ).
      lv_fldate = it_key_tab[ name = 'Fldate' ]-value.
    ELSE.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception.
    ENDIF.

    DELETE FROM  sflight
    WHERE carrid EQ lv_carrid
     AND connid EQ lv_connid
     AND fldate EQ lv_fldate.

    IF sy-subrc NE 0.

      me->mo_context->get_message_container( )->add_message(
        iv_msg_type               = 'E'                 " Message Type
        iv_msg_id                 = '2'                 " Message Class
        iv_msg_number             = '2'                 " Message Number
        iv_msg_v1                 = 'Erro ao atualizar' " Message Variable
      ).

      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          message_container = me->mo_context->get_message_container( ).

    ENDIF.

  ENDMETHOD.
  
  
* METHOD
*  ZCL_ZMCAGW_VOOS_DPC_EXT
*    COMPANHIAHORARIO_DEEP_ENTITY
*
  METHOD companhiahorario_deep_entity.

    DATA: ls_deep_entity TYPE  zcl_zmcagw_voos_mpc_ext=>ts_companhiahorariodeep,
          ls_spfli       TYPE spfli,
          lt_spfli       TYPE STANDARD TABLE OF spfli.

    io_data_provider->read_entry_data(
      IMPORTING
        es_data = ls_deep_entity
    ).

    IF ls_deep_entity-carrid IS NOT INITIAL.
      me->mo_context->get_message_container( )->add_message( iv_msg_type = 'E' iv_msg_id = '1' iv_msg_number = '1' iv_msg_v1 = 'Carr is not initial' ).
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          message_container = me->mo_context->get_message_container( ).
    ENDIF.

    lt_spfli = VALUE #( FOR item IN ls_deep_entity-companhiadeeptohorariodeep WHERE ( carrid = ls_deep_entity-carrid )  ( CORRESPONDING #( item ) ) ).

    IF lt_spfli IS NOT INITIAL.

      INSERT spfli FROM TABLE lt_spfli.

      IF sy-subrc NE 0.

        me->mo_context->get_message_container( )->add_message( iv_msg_type = 'E' iv_msg_id = '1' iv_msg_number = '1' iv_msg_v1 = 'Erro ao cadastrar' ).
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
          EXPORTING
            message_container = me->mo_context->get_message_container( ).

      ELSE.

        er_deep_entity = ls_deep_entity.

      ENDIF.

    ENDIF.

  ENDMETHOD.